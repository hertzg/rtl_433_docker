name: Buildx

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  docker:
    runs-on: ubuntu-20.04
    outputs:
      gitRefs: ${{ steps.builds.outputs.gitRefs }}
      builds: ${{ steps.builds.outputs.builds }}
      matrix: ${{ steps.builds.outputs.matrix }}
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/checkout@v2

      - id: builds
        run: yarn builds

      - if: ${{ github.event_name == 'pull_request' }}
        uses: marocchino/sticky-pull-request-comment@v2
        continue-on-error: true
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: builds
          message: |
            # Builds
            ```json
            ${{ toJSON(fromJSON(steps.builds.outputs.builds).*.id) }}
            ```
  docker-checkout:
    runs-on: ubuntu-20.04
    needs:
      - docker
    strategy:
      matrix:
        gitRef: ${{ fromJSON(needs.docker.outputs.gitRefs) }}
    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'merbanan/rtl_433'
          ref: ${{ matrix.gitRef }}
      - run: git archive ${{ matrix.gitRef }} --format tar.gz --output ${{ matrix.gitRef }}.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.gitRef }}
          path: ${{ matrix.gitRef }}.tar.gz

  docker-build:
    name: ${{ matrix.name }}
    needs:
      - docker
      - docker-checkout
    runs-on: ${{ matrix.runsOn }}
    strategy:
      matrix: ${{ fromJSON(needs.docker.outputs.matrix) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        with:
          config-inline: |
            [registry."docker.io"]
              mirrors = ["mirror.gcr.io"]
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.checkout.ref }}
          path: ${{ matrix.buildx.context }}
      - run: |
          cd ${{ matrix.buildx.context }}
          mkdir rtl_433
          tar xf ${{ matrix.checkout.ref }}.tar.gz --directory ./rtl_433
          rm -f ${{ matrix.checkout.ref }}.tar.gz
      - uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.buildx.context }}
          file: ${{ matrix.buildx.file }}
          build-args: ${{ matrix.buildx.buildArgs }}
          platforms: ${{ matrix.buildx.paltforms }}
          pull: true
          push: ${{ github.ref == 'refs/heads/master' || github.event_name == 'schedule' }}
          cache-from: ${{ matrix.buildx.cacheFrom }}
          cache-to: ${{ matrix.buildx.cacheTo }}
          tags: ${{ matrix.buildx.tags }}
